# name: CI/CD Pipeline for Ocean Pollution

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '18'

#       - name: Install dependencies
#         run: npm install

#       - name: Build the app
#         run: npm run build

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2

#       - name: Log in to Amazon ECR
#         env:
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
#         run: |
#           aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com

#       - name: Build and Push Docker image
#         run: |
#           docker buildx build --platform linux/arm64 -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/${{ secrets.ECR_REPOSITORY_NAME }}:latest --push .

#       - name: Deploy to ECS
#         env:
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
#           AWS_REGION: us-east-1
#           ECS_CLUSTER: ${{ secrets.ECS_CLUSTER_NAME }}
#           ECS_SERVICE: ${{ secrets.ECS_SERVICE_NAME }}
#           IMAGE_TAG: latest
#           ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }}
#           AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
#         run: |
#           aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --force-new-deployment --region $AWS_REGION
